1) C program to accept five integer values from keyword.


sol)The five values will be stored in an array using a pointer. Then print the elements of the array on the screen. 

Solution: 
#include<stdio.h> 
#include<conio.h>   
   int main() 
    { 
     int arr[5],i; 
     int *p=arr; 
     printf("Enter five numbers separated by space:"); 
     scanf("%d%d%d%d%d",p,p+1,p+2,p+3,p+4); 
     printf("Your numbers are:\n"); 
     for(i=0;i<5;i++) 
        printf("%d\n",arr[i]);      
     getch(); 
     return 0;   
    } 


2) C program to read two numbers from user and add them using pointers. How to find sum of two number using pointers in C programming. Program to perform arithmetic operations on number using pointers.

Example

Input

Input num1: 10
Input num2: 20
Output

Sum = 30
Difference = -10
Product = 200
Quotient = 0

Sol:
#include <stdio.h>

#include<conio.h>
   
   int main()
 
    {
 
     int arr1,arr2,i,sum,sub,mul,divi;
 
     int *p=&arr1;

     int *p1=&arr2;

     printf("Input num1: "); 

     scanf("%d",p); 

     printf("Input num2: "); 

     scanf("%d",p1); 

     sum=*p+*p1;

     sub=*p-*p1;

     mul=*p*(*p1);

     divi=*p/(*p1);

     printf("Sum : %d\n",sum); 

     printf("Difference : %d\n",sub); 

     printf("Product : %d\n",mul);
 
     printf("Quotient : %d\n",divi); 

     return 0;
   
    } 

3.C program to swap two numbers using pointers and functions. How to swap two numbers using call by reference method. Logic to swap two number using pointers in C program.



#include <stdio.h>


void swap(int * num1, int * num2);

int main()
{
    int num1, num2;

   
    printf("Enter two numbers: ");
    scanf("%d%d", &num1, &num2);

    
    printf("Before swapping in main n");
    printf("Value of num1 = %d \n", num1);
    printf("Value of num2 = %d \n\n", num2);

     swap(&num1, &num2);
    printf("After swapping in main n");
    printf("Value of num1 = %d \n", num1);
    printf("Value of num2 = %d \n\n", num2);

    return 0;
}


    void swap(int * num1, int * num2)
{
    int temp;

    
    temp = *num1;

   
    *num1= *num2;

  
    *num2= temp;

    printf("After swapping in swap function n");
    printf("Value of num1 = %d \n", *num1);
    printf("Value of num2 = %d \n\n", *num2);
}

4)C program to swap two numbers using pointers and functions. How to swap two numbers using call by reference method. Logic to swap two number using pointers in C program.

Example

Input

Input num1: 10
Input num2: 20
Output

Values after swapping:
Num1 = 20
Num2 = 10

Sol:
#include <stdio.h>
#define MAX_SIZE 100 

int main()
{
    char str[MAX_SIZE];
    int i, words;
    printf("Enter any string: ");
    gets(str);
    i = 0;
    words = 1;
     while(str[i] != '\0')
    {
       if(str[i]==' ' || str[i]=='\n' || str[i]=='\t')
        {
            words++;
        }

        i++;
    }
    printf("Total number of words = %d", words);
    return 0;
}

5)C program to count total number of words in a string using loop. How to find total number of words in a given string using loops in C programming. Logic to count total number of words in a string.

Example

Input

Input string: I love Codeforwin.
Output

Total number of words: 4

Sol:
#include <stdio.h>
#include <stdlib.h> 
 
int main()
{
    FILE *fptr1, *fptr2;
    char filename[100], c;
 
    printf("Enter the filename to open for reading \n");
    scanf("%s", filename);
 
    fptr1 = fopen(filename, "r");
    if (fptr1 == NULL)
    {
        printf("Cannot open file %s \n", filename);
        exit(0);
    }
 
    printf("Enter the filename to open for writing \n");
    scanf("%s", filename);
 
    fptr2 = fopen(filename, "w");
    if (fptr2 == NULL)
    {
        printf("Cannot open file %s \n", filename);
        exit(0);
    }
 
    c = fgetc(fptr1);
    while (c != EOF)
    {
        fputc(c, fptr2);
        c = fgetc(fptr1);
    }
 
    printf("\nContents copied to %s", filename);
 
    fclose(fptr1);
    fclose(fptr2);
    return 0;
}

5)C program to transfer data from one file to another file.



#include <stdio.h>
#include <stdlib.h> 
 
int main()
{
    FILE *fptr1, *fptr2;
    char filename[100], c;
 
    printf("Enter the filename to open for reading \n");
    scanf("%s", filename);
 
    fptr1 = fopen(filename, "r");
    if (fptr1 == NULL)
    {
        printf("Cannot open file %s \n", filename);
        exit(0);
    }
 
    printf("Enter the filename to open for writing \n");
    scanf("%s", filename);
 
    fptr2 = fopen(filename, "w");
    if (fptr2 == NULL)
    {
        printf("Cannot open file %s \n", filename);
        exit(0);
    }
 
    c = fgetc(fptr1);
    while (c != EOF)
    {
        fputc(c, fptr2);
        c = fgetc(fptr1);
    }
 
    printf("\nContents copied to %s", filename);
 
    fclose(fptr1);
    fclose(fptr2);
    return 0;

6)C programs for atoi() function,bool,malloc,calloc,free functions.

Sol:
6.1.atoi function



#include <stdio.h>
#include <stdlib.h>
 
int main()
{
    char a[10] = "100";
    int value = atoi(a);
    printf("Value = %d\n", value);
    return 0;
}




6.2.calloc function



#include <stdio.h>
#include <stdlib.h>

int main () {
   int i, n;
   int *a;

   printf("Number of elements to be entered:");
   scanf("%d",&n);

   a = (int*)calloc(n, sizeof(int));
   printf("Enter %d numbers:\n",n);
   for( i=0 ; i < n ; i++ ) {
      scanf("%d",&a[i]);
   }

   printf("The numbers entered are: ");
   for( i=0 ; i < n ; i++ ) {
      printf("%d ",a[i]);
   }
   free( a );
   
   return(0);
}



6.3.malloc function



#include <stdio.h>
#include <stdlib.h>

int main () {
   char *str;

   
   str = (char *) malloc(15);
   strcpy(str, "tutorialspoint");
   printf("String = %s,  Address = %u\n", str, str);

   
   str = (char *) realloc(str, 25);
   strcat(str, ".com");
   printf("String = %s,  Address = %u\n", str, str);

   free(str);
   
   return(0);
}





6.4.free function




#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main () {
   char *str;

   str = (char *) malloc(15);
   strcpy(str, "tutorialspoint");
   printf("String = %s,  Address = %u\n", str, str);
   str = (char *) realloc(str, 25);
   strcat(str, ".com");
   printf("String = %s,  Address = %u\n", str, str);

   free(str);
   
   return(0);
}
